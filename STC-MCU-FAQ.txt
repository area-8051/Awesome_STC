-- Why should I use STC's MCU? -----------------------------------------

Provided you compare apples to apples, i.e. STC's MCU to other 
MCS-51 MCU:

- They are cheap.
- They have easy to use peripherals.
- They are well documented.
- They can be used with open source tools.
- They don't require a proprietary programmer.

These charachteristics are certainly not unique, but their combination
constitutes a kind of least resistance path in the MCS-51 world.

-- Which programmer should I buy? --------------------------------------

An USB-to-TTL adapter is enough to flash an STC MCU.

However, as the flashing procedure involves power cycling the MCU,
you may want to buy an "STC Auto Programmer" from AliExpress for 
a couple of dollars/euros to make it even easier.

Read the Using_an_STC_Auto_Programmer_with_STCGAL.pdf document in this
repository for more information.

The automatic programmer described in the folder below has the advantage
that it can be used both as a programmer and an USB-to-serial adapter, 
which STC Auto Programmer cannot (due to its use of DTR instead of RTS), 
but you have to build it yourself:

https://github.com/area-8051/tips-and-tricks/tree/master/Improved_STC_MCU_Programmer

-- Which STC MCU should I use? -----------------------------------------

The STC8H series is where STC put most of their efforts. However, their
"advanced 16-bit PWM", though powerful, is clumsy and poorly documented.
Things that were easy with the PCA and 15-bit enhanced PWM have become
more difficult with the STC8H and may lead to a waste of PWM channels.

The following table summarises a few common selection criteria:

 If you need        | use an
====================+===================================================
 a USB peripheral   | STC8H8K64U
--------------------+---------------------------------------------------
 DMA support        | STC8A8K64D4, STC8H8K64U, STC8H4, STC8H1K17T
--------------------+---------------------------------------------------
 4 UART             | STC8A8K64D4, STC8H8K64U, STC8H4, STC8H3K64S4
--------------------+---------------------------------------------------
 a lot of RAM       | STC8A8K64D4, STC8H8K64U
--------------------+---------------------------------------------------
 a fast MCU         | STC8A8K64D4, STC8H8K64U, STC8H4, STC8H3
--------------------+---------------------------------------------------
 an 8-pin package   | STC8G1K17A-36I-SOP8
--------------------+---------------------------------------------------
 a DIP package      | STC8G1K17A-36I-DIP8, STC8G1K17-38I-DIP16, 
                    | STC8G1K17-38I-DIP20, STC8H8K64U-45I-PDIP40
--------------------+---------------------------------------------------
 an easy-to-use PWM | STC8A8K64D4, STC8G1K17, STC8G1K17A
--------------------+---------------------------------------------------

For cost-sensitive applications, the STC8 series are still the best 
choice, as older series (STC15, STC12...) are more expensive.

-- Which toolchain should I use? ---------------------------------------

SDCC includes a C compiler, an assembler and a linker.

Other than this, you'll just need STCGAL to program your MCU:
https://github.com/grigorig/stcgal

-- Where can I find code examples? -------------------------------------

Here is a HAL providing consistent use of STC's MCU features across
their most recent series: https://github.com/area-8051/uni-STC

This repository includes demos to illustrate the use of the HAL, but
the HAL's source code can be used as a live documentation on the use 
of STC's MCU.

-- Where can I find documentation? -------------------------------------

SDCC:

https://sdcc.sourceforge.net/doc/sdccman.pdf

Chinese versions of MCU datasheets:

http://www.stcmcudata.com/STC8F-datasheet/STC8H.pdf
http://www.stcmcudata.com/STC8F-datasheet/STC8G.pdf
http://www.stcmcudata.com/STC8F-datasheet/STC8A-STC8F.pdf
http://www.stcmcudata.com/datasheet/stc/stc-ad-pdf/STC15.pdf
http://www.stcmcudata.com/datasheet/stc/stc-ad-pdf/STC12C5A60S2.pdf

English versions of MCU datasheets:

http://www.stcmcudata.com/STC8F-datasheet/STC8H-en.pdf
http://www.stcmcudata.com/STC8F-datasheet/STC8G-en.pdf
http://www.stcmcudata.com/STC8F-datasheet/STC8A-STC8F-en.pdf
http://www.stcmcudata.com/datasheet/stc/stc-ad-pdf/STC15-english.pdf
http://www.stcmcudata.com/datasheet/stc/stc-ad-pdf/STC12C5A60S2-english.pdf

Chinese-only datasheet:

http://www.stcmcudata.com/STC8F-datasheet/STC8A8K64D4.pdf

You can check the following page for documentation updates:

http://www.stcmcudata.com/website-update.txt

The files in the following folder track gaps between Chinese and English 
documentation, silicon errata, and migration guides:

https://github.com/area-8051/tips-and-tricks/tree/master/STC_documentation_tracking

-- Where can I buy STC MCU? --------------------------------------------

https://www.lcsc.com/products/Microcontroller-Units-MCUs-MPUs-SOCs_11329.html?keyword=STC8H

It is also possible to order directly from STC, the updated price list
is available at: http://www.stcmcudata.com/stc-mcu-select.txt

Being a text file, it will not display correctly in a browser, so it is 
better downloaded with a command such as:

wget -q --remote-encoding=GB18030 http://www.stcmcudata.com/stc-mcu-select.txt

It's interesting for orders of CNY 3000 and above (around USD/EUR 450), 
or if you need parts not available from LCSC yet.

-- Why don't you cover STC32 MCU? --------------------------------------

The STC32F and STC32G are MCS-251 MCU, with a different programming 
model, which is not supported by SDCC.

Furthermore, there is no point in using an STC32G when 32-bit RISC-V MCU
are available at the same price point or less. While there definitely are 
use cases for 8-bit MCS-51 MCU, I can't see any reason to use the STC32.

If you're interested, WCH makes very interesting RISC-V MCU, the CH32V/
CH32X/CH32L series and the CH582. See http://wch-ic.com/ for technical 
information.

They also offer an Eclipse-based IDE supporting all their chips, which
can help you getting started quickly: http://www.mounriver.com/

See the following document for more about WCH's RISC-V MCU:
https://github.com/area-8051/RISC-V_stuff/blob/master/RISC-V_MCU_development_boards.pdf

-- What are the differences between the STC8H8K64U and the STC8A8K64D4?

They are almost identical:

 Features |   STC8H8K64U    | STC8A8K64D4
----------+-----------------+----------------
   PCA    | No              | Yes
   PWM    | Advanced 16-bit | Enhanced 15-bit
   USB    | Yes             | No
   RTC    | Yes             | No
